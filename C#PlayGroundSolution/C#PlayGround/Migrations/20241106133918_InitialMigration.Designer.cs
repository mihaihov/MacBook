// <auto-generated />
using System;
using ConsoleDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CPlayGround.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241106133918_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsoleDatabase.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            OrderDate = new DateTime(2024, 11, 6, 15, 9, 18, 180, DateTimeKind.Local).AddTicks(7420),
                            UserId = 1
                        },
                        new
                        {
                            OrderId = 2,
                            OrderDate = new DateTime(2024, 11, 6, 14, 54, 18, 180, DateTimeKind.Local).AddTicks(7460),
                            UserId = 2
                        },
                        new
                        {
                            OrderId = 3,
                            OrderDate = new DateTime(2024, 11, 6, 13, 39, 18, 180, DateTimeKind.Local).AddTicks(7460),
                            UserId = 3
                        },
                        new
                        {
                            OrderId = 4,
                            OrderDate = new DateTime(2024, 11, 6, 13, 29, 18, 180, DateTimeKind.Local).AddTicks(7460),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("ConsoleDatabase.Entities.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            OrderItemId = 1,
                            OrderId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            OrderItemId = 2,
                            OrderId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            OrderItemId = 3,
                            OrderId = 3,
                            ProductId = 3
                        },
                        new
                        {
                            OrderItemId = 4,
                            OrderId = 4,
                            ProductId = 4
                        },
                        new
                        {
                            OrderItemId = 5,
                            OrderId = 1,
                            ProductId = 5
                        },
                        new
                        {
                            OrderItemId = 6,
                            OrderId = 2,
                            ProductId = 1
                        },
                        new
                        {
                            OrderItemId = 7,
                            OrderId = 3,
                            ProductId = 2
                        },
                        new
                        {
                            OrderItemId = 8,
                            OrderId = 4,
                            ProductId = 3
                        },
                        new
                        {
                            OrderItemId = 9,
                            OrderId = 1,
                            ProductId = 4
                        },
                        new
                        {
                            OrderItemId = 10,
                            OrderId = 2,
                            ProductId = 5
                        },
                        new
                        {
                            OrderItemId = 11,
                            OrderId = 3,
                            ProductId = 1
                        },
                        new
                        {
                            OrderItemId = 12,
                            OrderId = 4,
                            ProductId = 2
                        },
                        new
                        {
                            OrderItemId = 13,
                            OrderId = 1,
                            ProductId = 3
                        },
                        new
                        {
                            OrderItemId = 14,
                            OrderId = 2,
                            ProductId = 4
                        },
                        new
                        {
                            OrderItemId = 15,
                            OrderId = 3,
                            ProductId = 5
                        });
                });

            modelBuilder.Entity("ConsoleDatabase.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Price = 7.99m,
                            ProductName = "Apa"
                        },
                        new
                        {
                            ProductId = 2,
                            Price = 10.99m,
                            ProductName = "Lapte"
                        },
                        new
                        {
                            ProductId = 3,
                            Price = 17.99m,
                            ProductName = "Suc"
                        },
                        new
                        {
                            ProductId = 4,
                            Price = 12.99m,
                            ProductName = "Bere"
                        },
                        new
                        {
                            ProductId = 5,
                            Price = 57.99m,
                            ProductName = "Gin"
                        });
                });

            modelBuilder.Entity("ConsoleDatabase.Entities.Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfileId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ProfileId");

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            ProfileId = 1,
                            FirstName = "Mihai",
                            LastName = "Raducu",
                            UserId = 1
                        },
                        new
                        {
                            ProfileId = 2,
                            FirstName = "Dana",
                            LastName = "Arvinti",
                            UserId = 2
                        },
                        new
                        {
                            ProfileId = 3,
                            FirstName = "Irina",
                            LastName = "Raducu",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("ConsoleDatabase.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "raducumihaicristian@gmail.com",
                            UserName = "Mihai"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "danaarvinti@gmail.com",
                            UserName = "Dana"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "irinaraducu@gmail.com",
                            UserName = "Irina"
                        });
                });

            modelBuilder.Entity("ConsoleDatabase.Entities.Order", b =>
                {
                    b.HasOne("ConsoleDatabase.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ConsoleDatabase.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
